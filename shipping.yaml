- name: install shipping componet
  hosts: shipping
  become: yes
  tasks:
  - name: install maven 
    ansible.builtin.yum:
      name: maven
      state: installed
  - name: check roboshop exist or not
    #when ever we want to run linux commands directly i.e in the case of module not available in ansible
    ansible.builtin.command: id roboshop
    register: out #output is variable name 
    ignore_errors: true
  - when: out.rc != 0
    name: create user roboshop
    become: yes #we need sudo access for this task only
    ansible.builtin.user:
      name: roboshop
  - name:  setup an app directory
    ansible.builtin.stat:
      path: /app
    register: directory
  
  - name: print the directory stats
    ansible.builtin.debug:
      msg: "out put is : {{directory}}"

  - when: directory.stat.exists == False
    name: create/app directory
    ansible.builtin.file:
      path: /app
      state: directory
  
  - name: download shipping and unzip shipping.zip
    ansible.builtin.unarchive:
      src: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /app
      remote_src: yes
  - name: maven package clean
    ansible.builtin.command: mvn clean package
    args: 
      chdir: /app
  - name: rename jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args: 
      chdir: /app
  - name: Copy shipping servicce
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: daemon reload
    ansible.builtin.systemd:
      daemon_reload: true


  - name: install MYSQL client 
    ansible.builtin.yum:
      name: yum install mysql -y 
      state: installed
 

  - name: load schema
    ansible.builtin.shell: mysql -h mysql.kirandevops.online -uroot -pRoboShop@1 < /app/schema/shipping.sql 
  
  - name: Restart shipping service
    ansible.builtin.service:
      name: shipping
      state: restarted
      enabled: true
   
  
